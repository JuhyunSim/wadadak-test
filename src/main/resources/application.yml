spring:
  application:
    name: runningService

  profiles:
    active: oauth
  security:
    oauth2:
      client:
        registration:
          google:
            provider: google
            client-id: google-client-id
            client-secret: google-client-secret
            redirect-uri: http://localhost:8080/login/oauth
            authorization-grant-type: authorization_code
            
  cloud:
    openfeign:
      okhttp:
        enabled: true
      autoconfiguration:
        jackson:
          enabled: true

  datasource:
    url: ENC(5ytcBWBvZiDQ+3s4ATlSW3M+DkdhbmFkeJ6dDGUPcFfTUpMfE5wLebK5A2RFOU9SWmPFRIzaRls=)
    username: ENC(I7Q/hHFeGv4D1Z9ZuRCBYGmSIBfZYVoG)
    password: ENC(rltfHiZll9jHiF5laY2UCyNQhA5FSD9I)
  jpa:
    hibernate:
      ddl-auto: create
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  mvc:
    path-match:
      matching-strategy: ant_path_matcher

jasypt:
  encryptor:
    property:
      bean: jasyptStringEncryptor
    password: ${SECRET_KEY}

aes:
  password: ENC(bNFHIaK7GMWsLENBY2YeuUQd9IIMQCA5yLT/gqCM1/tcJgffgMTIakFH/KdD1iBHe4TuI+QLSQ8=)
  salt: ENC(PSCfb8OV0WUrPUPcr1DUvWUKjSp16Rz4PDy8TRy10zv75240HhTP/g==)

jwt:
  secret: ENC(vujfcECDx3dhsf/tAiuUjfdL//SvziutrLQxXL4WGmGWV+6Ytv3gFSukbwpPZdqPHbnoFTY9uf4=)

url:
  access-token: http://localhost:8080/oauth/token
  profile: http://localhost:8080/user/profile

aws:
  s3:
    region: ENC(psk5C0nSk1GQPjS6B93mgpT/poUDVkBi)
    bucketName: ENC(jZdTJvbbCltjdX3lsuC85xGMwnbayMQU)
    roleArn: ENC(itgAU5raT4FloGKQIkdq81aO8izs5lfRJ9Ri3H7aNKdiARVq+R9klghOjG7W1pErPL61M2UmocK19uIYwSdR+w==)
    
mailgun:
  domain: ENC(zPmaD0glNj5N1aCws5wE7zrwzIzdVqGk7sQ8g4kgtEYaSS9FQlDmrM2SuOXnLQ1/V/KUJbCCH1/4pFNzZoIrvQ==)
  api-key: ENC(wQtu6ruB7EvprF3yegJ9Bo/BJs7CbsAP9VznEeabsnYwiMAVHXZGmcUP4MGLSF1N9KaL0CWy8Gk0x4fsBPlGjw==)

logging:
  level:
    root: info

